{"version":3,"sources":["queries/github-queries.js","components/Loading.js","components/About.js","components/FeaturedRepos.js","components/RecentRepos.js","App.js","index.js"],"names":["AboutQuery","gql","FeaturedReposQuery","RecentReposQuery","Loading","loading","source","About","useQuery","error","data","me","getAbout","message","Object","keys","map","k","index","FeaturedRepos","featuredRepos","getFeaturedRepos","r","name","RecentRepos","recentRepos","getRecentRepos","App","className","console","log","process","NODE_ENV","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IAEaA,EAAaC,YAAH,6OAkBVC,EAAqBD,YAAH,oVAuBlBE,EAAmBF,YAAH,iU,eC3BdG,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC3B,OACC,mCACED,EACA,oCACC,cAAC,YAAD,IACA,uDAA0BC,QAExB,QCWQC,EAjBD,WACb,MAAiCC,YAASR,GAAlCK,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAClBC,EAAKD,GAAQA,EAAKE,SAExB,OACC,gCACC,2DACA,cAAC,EAAD,CAASP,QAASA,EAASC,OAAO,WACjCG,GAAK,iBAAcA,EAAMI,SACzBH,GACAI,OAAOC,KAAKJ,GAAIK,KAAI,SAACC,EAAGC,GACvB,OAAO,wCAAqBD,EAArB,aAA2BN,EAAGM,KAApBC,UCaPC,EAxBO,WACrB,MAAiCX,YAASN,GAAlCG,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAClBU,EAAa,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAMW,iBAE5B,OACC,gCACC,mEACA,cAAC,EAAD,CAAShB,QAASA,EAASC,OAAO,WACjCG,GAAK,iBAAcA,EAAMI,SACzBH,GACAU,EAAcJ,KAAI,SAACM,EAAGJ,GACrB,OACC,gCACC,6BAAKI,EAAEC,OACNT,OAAOC,KAAKO,GAAGN,KAAI,SAACC,EAAGC,GACvB,OAAO,wCAAqBD,EAArB,aAA2BK,EAAEL,KAAnBC,QAHTA,UCYDM,EAxBK,WACnB,MAAiChB,YAASL,GAAlCE,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAClBe,EAAW,OAAGf,QAAH,IAAGA,OAAH,EAAGA,EAAMgB,eAE1B,OACC,gCACC,iEACA,cAAC,EAAD,CAASrB,QAASA,EAASC,OAAO,WACjCG,GAAK,iBAAcA,EAAMI,SACzBH,GACAe,EAAYT,KAAI,SAACM,EAAGJ,GACnB,OACC,gCACC,6BAAKI,EAAEC,OACNT,OAAOC,KAAKO,GAAGN,KAAI,SAACC,EAAGC,GACvB,OAAO,wCAAqBD,EAArB,aAA2BK,EAAEL,KAAnBC,QAHTA,UCDDS,IAbf,WACC,OACC,sBAAKC,UAAU,MAAf,UACC,wBAAQA,UAAU,aAAlB,SACC,iDAED,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,S,gCCXH,+FAKAC,QAAQC,IAAIC,EAAQC,UAEpB,IAEMC,EAAS,IAAIC,IAAa,CAC/BC,IAH6E,uCAI7EC,MAAO,IAAIC,MAGZC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAgBP,OAAQA,EAAxB,SACC,cAAC,IAAD,QAGFQ,SAASC,eAAe,U","file":"static/js/main.75ead43e.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const AboutQuery = gql`\r\n\tquery GetAbout {\r\n\t\tgetAbout {\r\n\t\t\tname\r\n\t\t\tbio\r\n\t\t\tavatarUrl\r\n\t\t\tlocation\r\n\t\t\turl\r\n\t\t\tstatus {\r\n\t\t\t\temojiHTML\r\n\t\t\t\tmessage\r\n\t\t\t}\r\n\t\t\tcompany\r\n\t\t\tisHireable\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const FeaturedReposQuery = gql`\r\n\tquery GetFeaturedRepos {\r\n\t\tgetFeaturedRepos {\r\n\t\t\tname\r\n\t\t\tdescription\r\n\t\t\thomepageUrl\r\n\t\t\tupdatedAt\r\n\t\t\turl\r\n\t\t\topenGraphImageUrl\r\n\t\t\tcommitCount\r\n\t\t\tlanguages {\r\n\t\t\t\tname\r\n\t\t\t\tcolor\r\n\t\t\t}\r\n\t\t\ttopics {\r\n\t\t\t\ttopic {\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const RecentReposQuery = gql`\r\n\tquery GetRecentRepos {\r\n\t\tgetRecentRepos {\r\n\t\t\tname\r\n\t\t\tdescription\r\n\t\t\thomepageUrl\r\n\t\t\tupdatedAt\r\n\t\t\turl\r\n\t\t\topenGraphImageUrl\r\n\t\t\tcommitCount\r\n\t\t\tlanguages {\r\n\t\t\t\tname\r\n\t\t\t}\r\n\t\t\ttopics {\r\n\t\t\t\ttopic {\r\n\t\t\t\t\tname\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport { BarLoader } from \"react-spinners\";\r\n\r\nconst Loading = ({ loading, source }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<BarLoader />\r\n\t\t\t\t\t<span>'Loading data from {source}</span>\r\n\t\t\t\t</section>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { AboutQuery } from \"../queries/github-queries\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst About = () => {\r\n\tconst { loading, error, data } = useQuery(AboutQuery);\r\n\tconst me = data && data.getAbout;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is the About section</h1>\r\n\t\t\t<Loading loading={loading} source=\"GitHub\" />\r\n\t\t\t{error && `Error! ${error.message}`}\r\n\t\t\t{data &&\r\n\t\t\t\tObject.keys(me).map((k, index) => {\r\n\t\t\t\t\treturn <div key={index}>{`${k}: ${me[k]}`}</div>;\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { FeaturedReposQuery } from \"../queries/github-queries\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst FeaturedRepos = () => {\r\n\tconst { loading, error, data } = useQuery(FeaturedReposQuery);\r\n\tconst featuredRepos = data?.getFeaturedRepos;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is the FeaturedRepos section</h1>\r\n\t\t\t<Loading loading={loading} source=\"GitHub\" />\r\n\t\t\t{error && `Error! ${error.message}`}\r\n\t\t\t{data &&\r\n\t\t\t\tfeaturedRepos.map((r, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t<h1>{r.name}</h1>\r\n\t\t\t\t\t\t\t{Object.keys(r).map((k, index) => {\r\n\t\t\t\t\t\t\t\treturn <div key={index}>{`${k}: ${r[k]}`}</div>;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FeaturedRepos;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { RecentReposQuery } from \"../queries/github-queries\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst RecentRepos = () => {\r\n\tconst { loading, error, data } = useQuery(RecentReposQuery);\r\n\tconst recentRepos = data?.getRecentRepos;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is the RecentRepos section</h1>\r\n\t\t\t<Loading loading={loading} source=\"GitHub\" />\r\n\t\t\t{error && `Error! ${error.message}`}\r\n\t\t\t{data &&\r\n\t\t\t\trecentRepos.map((r, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t<h1>{r.name}</h1>\r\n\t\t\t\t\t\t\t{Object.keys(r).map((k, index) => {\r\n\t\t\t\t\t\t\t\treturn <div key={index}>{`${k}: ${r[k]}`}</div>;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default RecentRepos;\r\n","import About from \"./components/About\";\nimport FeaturedRepos from \"./components/FeaturedRepos\";\nimport RecentRepos from \"./components/RecentRepos\";\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>Hello, world!</h1>\n\t\t\t</header>\n\t\t\t<About />\n\t\t\t<FeaturedRepos />\n\t\t\t<RecentRepos />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconsole.log(process.NODE_ENV);\n\nconst url = process.env.NODE_ENV == \"development\" ? \"http://localhost:4000\" : \"https://geraldiner-com.herokuapp.com\";\n\nconst client = new ApolloClient({\n\turi: url,\n\tcache: new InMemoryCache(),\n});\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ApolloProvider client={client}>\n\t\t\t<App />\n\t\t</ApolloProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n);\n"],"sourceRoot":""}